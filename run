#!/usr/bin/env sh

install_full_command() {
    poetry install
}

update_command() {
    git pull origin main
    poetry update
}

sql_app_command() {
    poetry run uvicorn sql_app.main:app --reload
}

bigger_app_command() {
    poetry run uvicorn bigger_app.main:app --reload
}

oauth2_password_bearer_command() {
    poetry run uvicorn oauth2_password_bearer.main:app --reload
}

oauth2_password_bearer_jwt_command() {
    poetry run uvicorn oauth2_password_bearer_jwt.main:app --reload
}

oauth2_password_bearer_jwt_scopes_command() {
    poetry run uvicorn oauth2_password_bearer_jwt_scopes.main:app --reload
}

show_help() {
    echo "Usage: ./run [option]"
    echo "Options:"
    echo "  install                Install with dev and test dependencies"
    echo "  update                 Git pull and update dependencies"
    echo "  sql-app                Run sql_app"
    echo "  big-app                Run bigger_app"
    echo "  oauth2-pwd             Run oauth2_password_bearer"
    echo "  oauth2-jwt             Run oauth2_password_bearer_jwt"
    echo "  oauth2-scopes          Run oauth2_password_bearer_jwt_scopes"
    echo "  help                   Show this help message"
}

if [ -z "$1" ]; then
    show_help
else
    case "$1" in
        "install") install_full_command ;;
        "update") update_command ;;
        "sql-app") sql_app_command ;;
        "bigger-app") bigger_app_command ;;
        "oauth2-pwd") oauth2_password_bearer_command ;;
        "oauth2-jwt") oauth2_password_bearer_jwt_command ;;
        "oauth2-scopes") oauth2_password_bearer_jwt_scopes_command ;;
        *) show_help ;;
    esac
fi
